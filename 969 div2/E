#include<bits/stdc++.h>
using namespace std;
#define int long long
#define ii pair<int,int>
#define iii pair<int,pair<int,int>>
#define st first
#define nd second

const int N=3e5+10;
const int mod=1e9+7;

int n, m, t, cnt, D[N], R[N], k, x, y, w, H[N], pa[N][21], ma[N][21], K[N], ans,par[N];
int A[N];
vector<int> ds[N];
ii Q[N];
void DFS(int a){
    for(int v: ds[a]){
        pa[v][0]=a;
        ma[v][0]=R[v];
        H[v]=H[a]+1;
        DFS(v);
    }
}
int lca(int a,int b){
    if(H[a]<H[b]) swap(a,b);
    for(int i=20; i>=0; i--){
        if(H[pa[a][i]]>=H[b]) a=pa[a][i];
    }
    if(a==b) return a;
    for(int i=20 ;i>=0; i--){
        if(pa[a][i]!=pa[b][i]){
            a=pa[a][i];
            b=pa[b][i];
        }
    }
    return pa[a][0];
}
int get(int a,int b){
    if(H[a]<H[b]) swap(a,b);
    int f=0;
    for(int i=20; i>=0; i--){
        if(H[pa[a][i]]>=H[b]){
            f=max(f,ma[a][i]);
            a=pa[a][i];
        }
    }
    if(a==b) return f;
    for(int i=20 ;i>=0; i--){
        if(pa[a][i]!=pa[b][i]){
            f=max({f,ma[a][i],ma[b][i]});
            a=pa[a][i];
            b=pa[b][i];
        }
    }
    return  max({f,ma[a][0],ma[b][0]});
}
void build(int a){
    for(int v: ds[a]){
        build(v);
        D[a]+=D[v];
    }
}
signed main(){
    ios::sync_with_stdio(0);cin.tie(0);
    cin>>t;
    while(t--){
        cin>>n>>w;
        for(int i=2; i<=n; i++){
            cin>>x;
            ds[x].push_back(i);
            par[i]=x;
        }
        for(int i=1; i<n; i++){
            cin>>x>>y;
            Q[i]={x,y};
            R[x]=i;
        }
        H[1]=1;
        DFS(1);
        for(int j=1; j<=20; j++){
            for(int i=1; i<=n; i++){
                ma[i][j]=max(ma[i][j-1],ma[pa[i][j-1]][j-1]);
                pa[i][j]=pa[pa[i][j-1]][j-1];
            }
        }
        for(int i=1; i<=n; i++){
            D[i]=0;
        }
        cnt=n;
        for(int i=1; i<=n; i++){
            D[i]++;
            D[i%n+1]++;
            D[lca(i,i%n+1)]-=2;
           // cout<<lca(i,i%n+1)<<' ';
            //if(par[i]!=i%n+1 && par[i%n+1]!=i){
                K[get(i,i%n+1)]++;

        }
        build(1);
        ans=0;
        cnt=n;
        for(int i=1; i<n; i++){
            w-=Q[i].nd;
            cnt-=K[i];
            ans+=D[Q[i].st]*Q[i].nd;
           // cout<<D[Q[i].st]<<' ';
            cout<<ans+cnt*w<<' ';
        }
        cout<<'\n';
        for(int i=1; i<=n; i++){
            K[i]=0;
            D[i]=0;
            H[i]=0;
            ds[i].clear();
            R[i]=0;
        }
        cnt=0;
        w=0;
    }


    return 0;
}


