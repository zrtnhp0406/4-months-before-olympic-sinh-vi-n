#include<bits/stdc++.h>
using namespace std;
#define int long long
#define ii pair<int,int>
#define st first
#define nd second
const int N=1e5+10;
const int dd=4e5;
int n,m,D[N*10],s,l,r,w,pos,type,cnt;
int B[2];
vector<ii> ds[N*10];
priority_queue<ii,vector<ii>,greater<ii>> pq;
void build(int id,int l,int r){
    if(l==r){
        ds[id+B[0]].push_back({0,l});
        ds[id+B[1]].push_back({0,l});

        ds[l].push_back({0,id+B[0]});
        ds[l].push_back({0,id+B[1]});
        //cout<<l<<' '<<id+B[0]<<'\n';
        //cout<<l<<' '<<id+B[1]<<'\n';
        return;
    }
        int mid=(l+r)/2;
        build(id*2,l,mid);
        build(id*2+1,mid+1,r);
        int bit=0;
        ds[id+B[bit]].push_back({0,id*2+B[bit]});
        ds[id+B[bit]].push_back({0,id*2+1+B[bit]});
        //cout<<id+B[bit]<<' '<<id*2+B[bit]<<'\n';
        //cout<<id+B[bit]<<' '<<id*2+1+B[bit]<<'\n';

        bit=1;
        ds[id*2+1+B[bit]].push_back({0,id+B[bit]});
        ds[id*2+B[bit]].push_back({0,id+B[bit]});
        //cout<<id*2+1+B[bit]<<' '<<id+B[bit]<<'\n';
        //cout<<id*2+B[bit]<<' ' <<id+B[bit]<<'\n';

}
void addedge(int id,int l,int r,int u,int v,int bit){
    if(r<u ||l>v) return;
    if(u<=l && r<=v){
       // if(pos==4 && u==1 && v==3) cout<<l<<' '<<r<<'\n';
        if(bit) {ds[id+B[bit]].push_back({w,pos});}// cout<<id+B[bit]<<' '<<pos<<'\n';}
        else {ds[pos].push_back({w,id+B[bit]});} //cout<<pos<<' '<<id+B[bit]<<'\n';}
        return;
    }
    int mid=(l+r)/2;
    addedge(id*2,l,mid,u,v,bit);
    addedge(id*2+1,mid+1,r,u,v,bit);
}
signed main(){
    ios::sync_with_stdio(0);cin.tie(0);
    cin>>n>>m>>s;
    B[0]=n;
    B[1]=5*n;
    build(1,1,n);

    for(int i=1; i<=m; i++){
        cin>>type;
        if(type==1){
            cin>>l>>r>>w;
            ds[l].push_back({w,r});
        //    cout<<l<<' '<<r<<'\n';
        }
        else if(type==2){
            cin>>pos>>l>>r>>w;
            addedge(1,1,n,l,r,0);
        }
        else{
            cin>>pos>>l>>r>>w;
            addedge(1,1,n,l,r,1);
        }
    }
    for(int i=1; i<=n*10; i++){
        D[i]=1e15;
    }
    D[s]=0;
    pq.push({0,s});
    while(!pq.empty()){
        ii u=pq.top();
        pq.pop();
        if(u.st!=D[u.nd]) continue;
        for(ii v: ds[u.nd]){
            if(D[v.nd]>u.st+v.st){
                D[v.nd]=u.st+v.st;
                pq.push({D[v.nd],v.nd});
            }
        }
    }
    for(int i=1; i<=n; i++) if(D[i]==1e15) cout<<-1<<' '; else cout<<D[i]<<' ';


    return 0;
}
/*
4 1
4 2
1 5
2 5
6 4
6 3
5 7
3 7
3 2
3 3
3 2
2 2
2 3
1 3
3 3

5 7
5 8
20 17
19 17
4 5
4 6
18 16
17 16
3 8
3 6
3 8
2 8
2 6
19 3
3 3
*/
