#include<bits/stdc++.h>
using namespace std;
const int mod=1e9+7;
int n,ans[2],m,d;
string a,b;
int z[2005][2005][2];
 
bool check(string& a){
    int du=0;
    for(int i=1; i<=a.size(); i++){
        du=(du*10+(a[i-1]-'0'))%m;
        if(i%2==0 && a[i-1]-'0'!=d) return false;
        if(i%2==1 && a[i-1]-'0'==d) return false;
    }
    return du==0;
}
void get(string& s) {
    int n = s.size();
    for(int i=0; i<=n+1; i++) for(int j=0; j<m; j++) for(int k=0; k<2; k++) z[i][j][k] = 0;
    z[0][0][1] = 1;
    for(int i=0; i<n; i++)
        for(int j=0; j<m; j++)
            for(int k=0; k<2; k++)
                for (int p = 0; p <= (k ? int(s[i] - '0') : 9); p++) {
                    if ((i & 1) && p != d) continue;
                    if (!(i & 1) && p == d) continue;
                    if (!i && !p) continue;
                    int ni = i + 1;
                    int nj = (j * 10 + p) % m;
                    int nk = k && (p == int(s[i] - '0'));
                    z[ni][nj][nk]=(z[ni][nj][nk]+z[i][j][k])%mod;
                }
    ans[0]=(z[n][0][0]+z[n][0][1])%mod;
}
 
int main(){
    ios::sync_with_stdio(0);cin.tie(0);
    cin>>m>>d;
    cin>>a>>b;
 
    get(b);
    swap(ans[0],ans[1]);
    get(a);
    cout<<(ans[1]-ans[0]+check(a)+mod)%mod;
 
 
 
 
 
 
 
    return 0;
}
